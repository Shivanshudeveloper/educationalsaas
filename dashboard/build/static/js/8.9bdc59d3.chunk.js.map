{"version":3,"sources":["views/dashboard/Default/index.js"],"names":["Dashboard","useState","setLoading","useEffect","userEmail","getSessionStorageOrDefault","appts","setAppts","show","setShow","selected","setSelected","events","setEvents","getAppts","a","axios","get","API_SERVICE","then","res","sample","data","map","id","push","title","date","startDate","console","log","catch","err","open","fullWidth","maxWidth","onClose","autoFocus","margin","value","label","disabled","sx","mb","type","display","justifyContent","alignItems","width","flexDirection","mr","Date","toLocaleDateString","startTime","ml","endDate","endTime","variant","m","minWidth","labelId","recurrenceType","email","Attende","hostUrl","description","multiline","rows","onClick","color","container","spacing","gridSpacing","item","xs","plugins","dayGridPlugin","initialView","eventClick","event"],"mappings":"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","file":"static/js/8.9bdc59d3.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\r\n// material-ui\r\nimport {\r\n  Grid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  Box,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n// project imports\r\n\r\nimport { gridSpacing } from \"store/constant\";\r\nimport MainCard from \"ui-component/cards/MainCard\";\r\n\r\nimport { API_SERVICE } from \"../../../config\";\r\nimport axios from \"axios\";\r\nimport { getSessionStorageOrDefault } from \"utils/getSessionStorageOrDefault\";\r\n// ===========================|| DEFAULT DASHBOARD ||=========================== //\r\n\r\nconst Dashboard = () => {\r\n  const [isLoading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, []);\r\n  const userEmail = getSessionStorageOrDefault(\"userEmail\", \"\");\r\n  const [appts, setAppts] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [selected, setSelected] = useState(null);\r\n  const [events, setEvents] = useState([]);\r\n  const getAppts = async () => {\r\n    await axios\r\n      .get(`${API_SERVICE}/getevents/${userEmail}`)\r\n      .then((res) => {\r\n        let sample = [];\r\n        res.data.map((data, id) =>\r\n          sample.push({ title: data.title, date: data.startDate, id: id })\r\n        );\r\n        console.log(res.data);\r\n        setEvents(res.data);\r\n        setAppts(sample);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  useEffect(() => {\r\n    getAppts();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={show}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        onClose={() => {\r\n          setShow(false);\r\n          setSelected(null);\r\n        }}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Event</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={selected?.title}\r\n            fullWidth\r\n            label=\"Title\"\r\n            disabled\r\n            sx={{ mb: 2 }}\r\n            type=\"text\"\r\n          />\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-evenly\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                width: \"50%\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                mr: 2,\r\n              }}\r\n            >\r\n              <TextField\r\n                disabled\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                value={new Date(selected?.startDate).toLocaleDateString()}\r\n                sx={{ mb: 2, width: \"60%\" }}\r\n                type=\"text\"\r\n              />\r\n              <TextField\r\n                disabled\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                value={selected?.startTime}\r\n                sx={{ mb: 2, width: \"60%\" }}\r\n                type=\"text\"\r\n              />\r\n            </Box>\r\n            <h3>to</h3>\r\n            <Box\r\n              sx={{\r\n                width: \"50%\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                ml: 2,\r\n              }}\r\n            >\r\n              <TextField\r\n                disabled\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                value={new Date(selected?.endDate).toLocaleDateString()}\r\n                sx={{ mb: 2, width: \"60%\" }}\r\n                type=\"text\"\r\n              />\r\n              <TextField\r\n                disabled\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                value={selected?.endTime}\r\n                sx={{ mb: 2, width: \"60%\" }}\r\n                type=\"text\"\r\n              />\r\n            </Box>\r\n          </Box>\r\n          <FormControl disabled variant=\"filled\" sx={{ m: 1, minWidth: 120 }}>\r\n            <Select\r\n              labelId=\"demo-simple-select-filled-label\"\r\n              id=\"demo-simple-select-filled\"\r\n              value={selected?.recurrenceType}\r\n            >\r\n              <MenuItem value={\"Doesn't repeat\"}>Doesn't repeat</MenuItem>\r\n              <MenuItem value={\"Custom\"}>Custom</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            fullWidth\r\n            value={selected?.email}\r\n            disabled\r\n            label=\"Email\"\r\n            sx={{ mb: 2 }}\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            fullWidth\r\n            value={selected?.Attende}\r\n            label=\"Attende\"\r\n            disabled\r\n            sx={{ mb: 2 }}\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            fullWidth\r\n            value={selected?.hostUrl}\r\n            label=\"Host URL:\"\r\n            disabled\r\n            sx={{ mb: 2 }}\r\n            type=\"text\"\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            fullWidth\r\n            value={selected?.description}\r\n            disabled\r\n            label=\"Description\"\r\n            multiline\r\n            rows={4}\r\n            sx={{ mb: 2 }}\r\n            type=\"text\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setShow(false);\r\n              setSelected(null);\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Grid container spacing={gridSpacing}>\r\n        <Grid item xs={12}>\r\n          <MainCard>\r\n            <FullCalendar\r\n              plugins={[dayGridPlugin]}\r\n              initialView=\"dayGridMonth\"\r\n              eventClick={({ event }) => {\r\n                setSelected(events[event.id]);\r\n                setShow(true);\r\n              }}\r\n              events={appts}\r\n            />\r\n          </MainCard>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}