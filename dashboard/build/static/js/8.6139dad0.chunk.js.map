{"version":3,"sources":["views/dashboard/Default/index.js"],"names":["Dashboard","useState","setLoading","useEffect","userEmail","getSessionStorageOrDefault","appts","setAppts","show","setShow","selected","setSelected","events","setEvents","getAppts","a","axios","get","API_SERVICE","then","res","sample","data","map","id","push","title","date","startDate","console","log","catch","err","open","fullWidth","maxWidth","onClose","autoFocus","margin","value","label","disabled","sx","mb","type","display","justifyContent","alignItems","width","flexDirection","mr","Date","toLocaleDateString","startTime","ml","endDate","endTime","variant","m","minWidth","labelId","recurrenceType","email","Attende","hostUrl","description","multiline","rows","onClick","color","container","spacing","gridSpacing","item","xs","plugins","dayGridPlugin","initialView","eventClick","event"],"mappings":"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","file":"static/js/8.6139dad0.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\"; // must go before plugins\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // a plugin!\n// material-ui\nimport {\n  Grid,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  Box,\n  FormControl,\n  Select,\n  MenuItem,\n  Button,\n  DialogActions,\n} from \"@material-ui/core\";\n// project imports\n\nimport { gridSpacing } from \"store/constant\";\nimport MainCard from \"ui-component/cards/MainCard\";\n\nimport { API_SERVICE } from \"../../../config\";\nimport axios from \"axios\";\nimport { getSessionStorageOrDefault } from \"utils/getSessionStorageOrDefault\";\n// ===========================|| DEFAULT DASHBOARD ||=========================== //\n\nconst Dashboard = () => {\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  const userEmail = getSessionStorageOrDefault(\"userEmail\", \"\");\n  const [appts, setAppts] = useState([]);\n  const [show, setShow] = useState(false);\n  const [selected, setSelected] = useState(null);\n  const [events, setEvents] = useState([]);\n  const getAppts = async () => {\n    await axios\n      .get(`${API_SERVICE}/getevents/${userEmail}`)\n      .then((res) => {\n        let sample = [];\n        res.data.map((data, id) =>\n          sample.push({ title: data.title, date: data.startDate, id: id })\n        );\n        console.log(res.data);\n        setEvents(res.data);\n        setAppts(sample);\n      })\n      .catch((err) => console.log(err));\n  };\n  useEffect(() => {\n    getAppts();\n  }, []);\n\n  return (\n    <>\n      <Dialog\n        open={show}\n        fullWidth\n        maxWidth=\"sm\"\n        onClose={() => {\n          setShow(false);\n          setSelected(null);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Event</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            value={selected?.title}\n            fullWidth\n            label=\"Title\"\n            disabled\n            sx={{ mb: 2 }}\n            type=\"text\"\n          />\n\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-evenly\",\n              alignItems: \"center\",\n            }}\n          >\n            <Box\n              sx={{\n                width: \"50%\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                mr: 2,\n              }}\n            >\n              <TextField\n                disabled\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                value={new Date(selected?.startDate).toLocaleDateString()}\n                sx={{ mb: 2, width: \"60%\" }}\n                type=\"text\"\n              />\n              <TextField\n                disabled\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                value={selected?.startTime}\n                sx={{ mb: 2, width: \"60%\" }}\n                type=\"text\"\n              />\n            </Box>\n            <h3>to</h3>\n            <Box\n              sx={{\n                width: \"50%\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                ml: 2,\n              }}\n            >\n              <TextField\n                disabled\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                value={new Date(selected?.endDate).toLocaleDateString()}\n                sx={{ mb: 2, width: \"60%\" }}\n                type=\"text\"\n              />\n              <TextField\n                disabled\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                value={selected?.endTime}\n                sx={{ mb: 2, width: \"60%\" }}\n                type=\"text\"\n              />\n            </Box>\n          </Box>\n          <FormControl disabled variant=\"filled\" sx={{ m: 1, minWidth: 120 }}>\n            <Select\n              labelId=\"demo-simple-select-filled-label\"\n              id=\"demo-simple-select-filled\"\n              value={selected?.recurrenceType}\n            >\n              <MenuItem value={\"Doesn't repeat\"}>Doesn't repeat</MenuItem>\n              <MenuItem value={\"Custom\"}>Custom</MenuItem>\n            </Select>\n          </FormControl>\n\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={selected?.email}\n            disabled\n            label=\"Email\"\n            sx={{ mb: 2 }}\n            type=\"text\"\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={selected?.Attende}\n            label=\"Attende\"\n            disabled\n            sx={{ mb: 2 }}\n            type=\"text\"\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={selected?.hostUrl}\n            label=\"Host URL:\"\n            disabled\n            sx={{ mb: 2 }}\n            type=\"text\"\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            fullWidth\n            value={selected?.description}\n            disabled\n            label=\"Description\"\n            multiline\n            rows={4}\n            sx={{ mb: 2 }}\n            type=\"text\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setShow(false);\n              setSelected(null);\n            }}\n            color=\"primary\"\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Grid container spacing={gridSpacing}>\n        <Grid item xs={12}>\n          <MainCard>\n            <FullCalendar\n              plugins={[dayGridPlugin]}\n              initialView=\"dayGridMonth\"\n              eventClick={({ event }) => {\n                setSelected(events[event.id]);\n                setShow(true);\n              }}\n              events={appts}\n            />\n          </MainCard>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}